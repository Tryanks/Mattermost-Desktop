name: release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"
  # 可以手动点击按钮触发
  workflow_dispatch:


defaults:
  run:
    shell: bash

env:
  TERM: xterm
  MM_WIN_INSTALLERS: 1

jobs:
  build-msi-installer:
    runs-on: windows-2022
    steps:
      - name: release/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: release/setup-node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: release/optimize
        shell: powershell
        run: ./scripts/Makefile.ps1 optimize
      - name: release/install-deps
        shell: powershell
        run: |
          ./scripts/Makefile.ps1 install-deps
          choco install yq --version 4.15.1 -y
          npm i -g node-gyp
          node-gyp install
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers"
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers" --arch arm64
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers" --arch ia32
          npm ci --openssl_fips=''
      - name: release/build
        shell: powershell
        env:
          MM_WIN_INSTALLERS: 1
#          PFX_KEY: ${{ secrets.MM_DESKTOP_MSI_INSTALLER_PFX_KEY }}
#          CSC_KEY_PASSWORD: ${{ secrets.MM_DESKTOP_MSI_INSTALLER_CSC_KEY_PASSWORD }}
#          PFX: ${{ secrets.MM_DESKTOP_MSI_INSTALLER_PFX }}
#          CSC_LINK: ${{ secrets.MM_DESKTOP_MSI_INSTALLER_CSC_LINK }}
        run: |
          ./scripts/Makefile.ps1 build
      - name: release/package
        run: |
          mkdir -p ./build/win-release
          bash -x ./scripts/patch_updater_yml.sh
          bash -x ./scripts/cp_artifacts.sh release ./build/win-release
      - name: release/upload-build
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: build
          path: ./build
          retention-days: 14

  upload-to-s3:
    runs-on: ubuntu-22.04
    needs:
      - build-msi-installer
    steps:
      - name: release/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: release/download-builds
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2

      - name: create timestamp
        id: create_timestamp
        run: echo "::set-output name=timestamp::$(TZ=UTC-8 date '+%Y_%m_%d_%H_%M_%S')"
        shell: bash

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}
        with:
            tag_name: 编译出包-${{ steps.create_timestamp.outputs.timestamp }}
            release_name: 编译出包-${{ steps.create_timestamp.outputs.timestamp }}
            draft: false
            prerelease: false


      - name: Upload release asset arm64
        id: upload-release-asset-arm64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./build/win-release/5.6.8/mattermost-desktop-5.6.8-arm64.zip
            asset_name: mattermost-desktop-5.6.8-arm64.zip
            asset_content_type: application/zip

      - name: Upload release asset win32
        id: upload-release-asset-win32
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./build/win-release/5.6.8/mattermost-desktop-5.6.8-win32.zip
            asset_name: mattermost-desktop-5.6.8-win32.zip
            asset_content_type: application/zip

      - name: Upload release asset win64
        id: upload-release-asset-win64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./build/win-release/5.6.8/mattermost-desktop-5.6.8-win64.zip
            asset_name: mattermost-desktop-5.6.8-win64.zip
            asset_content_type: application/zip

      - name: Upload release asset x64.msi
        id: upload-release-asset-x64-msi
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./build/win-release/5.6.8/mattermost-desktop-5.6.8-x64.msi
            asset_name: mattermost-desktop-5.6.8-x64.msi
            asset_content_type: application/octet-stream

      - name: Upload release asset x86.msi
        id: upload-release-asset-x86-msi
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./build/win-release/5.6.8/mattermost-desktop-5.6.8-x86.msi
            asset_name: mattermost-desktop-5.6.8-x86.msi
            asset_content_type: application/octet-stream

      - name: Upload release asset setup.exe
        id: upload-release-asset-setup-exe
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./build/win-release/5.6.8/mattermost-desktop-setup-5.6.8-win.exe
            asset_name: mattermost-desktop-setup-5.6.8-win.exe
            asset_content_type: application/octet-stream

#      - name: Upload file to minio
#        uses: yakubique/minio-upload@v1.1.3
#        with:
#          endpoint: minio.eimsound.com
#          access_key: ${{ secrets.MM_DESKTOP_RELEASE_AWS_ACCESS_KEY_ID }}
#          secret_key: ${{ secrets.MM_DESKTOP_RELEASE_AWS_SECRET_ACCESS_KEY }}
#          bucket: mmrealease
#          source: ./build
#          target: '/build'
#          recursive: true
